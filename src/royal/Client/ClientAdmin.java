/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package royal.Client;

import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Vores gui som kører oven på client
 * @author Niclas Bade
 */
public class ClientAdmin extends javax.swing.JFrame {
    private static Client mainClient = new Client();           
    private static Information info = null;
           
    /**
     * Laver en ny for AdminClient
     * @throws IOException 
     */
    public ClientAdmin() throws IOException {
         mainClient.startClient("Admin", "djkolort");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrInfo = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        btnOpdaterBrugere = new javax.swing.JButton();
        btnSendTur = new javax.swing.JButton();
        btnHentTure = new javax.swing.JButton();
        btnOpretTur = new javax.swing.JButton();
        scrTure = new javax.swing.JScrollPane();
        tblTure = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bruger", "Nuværende Tur", "logget in kl.", "Afslåede ture"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrInfo.setViewportView(tblInfo);

        btnOpdaterBrugere.setText("Opdater Brugerliste");
        btnOpdaterBrugere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpdaterBrugereActionPerformed(evt);
            }
        });

        btnSendTur.setText("send tur");
        btnSendTur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendTurActionPerformed(evt);
            }
        });

        btnHentTure.setText("hent ture");
        btnHentTure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHentTureActionPerformed(evt);
            }
        });

        btnOpretTur.setText("opret Tur");
        btnOpretTur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpretTurActionPerformed(evt);
            }
        });

        tblTure.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tur", "fra postnr", "til postnr", "tilhører kurer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrTure.setViewportView(tblTure);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOpdaterBrugere)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSendTur)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHentTure)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOpretTur)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrTure, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpdaterBrugere)
                    .addComponent(btnSendTur)
                    .addComponent(btnHentTure)
                    .addComponent(btnOpretTur))
                .addContainerGap())
            .addComponent(scrTure, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnOpdaterBrugereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpdaterBrugereActionPerformed
              try {             
            mainClient.sendBesked("getUsers");
            info = mainClient.info();
            OnlineKlienter[] clients = info.getKlienter();
            for(int i = 0; i < clients.length; i++){
            tblInfo.setValueAt(clients[i].getBrugerNavn(), i, 0);
            tblInfo.setValueAt(clients[i].getTidLoggetInd(), i, 2);
              }
        } catch (IOException ex) {
            Logger.getLogger(ClientAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOpdaterBrugereActionPerformed

    private void btnSendTurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendTurActionPerformed
            info = mainClient.info();
               try {
                   mainClient.sendBesked("getUsers");
               } catch (IOException ex) {
                   Logger.getLogger(ClientAdmin.class.getName()).log(Level.SEVERE, null, ex);
               }
           Ture[] tur = null;
            OnlineKlienter[] clients = info.getKlienter();
            int column = tblInfo.getSelectedColumn();
            int row = tblInfo.getSelectedRow();
            int columTur = tblTure.getSelectedColumn();
            int rowTur = tblTure.getSelectedRow();
            String  turNrString = tblTure.getValueAt(rowTur, 0).toString();
            int turNr = Integer.parseInt(turNrString);
            String selectedUserName = tblInfo.getValueAt(row, 0).toString();
              royal.Client.dbConnection c = new royal.Client.dbConnection();
                        Connection con = c.sqlForbindelse();
               try {
                   tur = c.setUfærdigeTure();
               } catch (SQLException ex) {
                   Logger.getLogger(ClientAdmin.class.getName()).log(Level.SEVERE, null, ex);
               }
            for(int i = 0; i < clients.length; i++){
                String tempUserName = clients[i].getBrugerNavn();
                if(tempUserName.equals(selectedUserName)){
                    System.out.println(selectedUserName);
                         try {
                    System.out.println("id er "+ i);
                    ClientAdmin.mainClient.sendBesked("ture "+ i +" " + turNr);
             } catch (IOException ex) {
            Logger.getLogger(ClientAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
                }
            }            
            
   
  
    }//GEN-LAST:event_btnSendTurActionPerformed

    private void btnHentTureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHentTureActionPerformed
        royal.Client.dbConnection k = new royal.Client.dbConnection();
                        Connection con = k.sqlForbindelse();    
               try {
                   Ture[] ture = k.setUfærdigeTure();
                   for(int i = 0; i < ture.length-2; i ++){                      
                      tblTure.setValueAt(i, i, 0);
                      tblTure.setValueAt(ture[i].getafhentningsPostNr(), i, 1);
                      tblTure.setValueAt(ture[i].getleveringsPostNr(), i, 2);
                      tblTure.setValueAt(ture[i].getafhentningsKundeNavn(),i,3);
                   }
               } catch (SQLException ex) {
                   Logger.getLogger(ClientAdmin.class.getName()).log(Level.SEVERE, null, ex);
               }
    }//GEN-LAST:event_btnHentTureActionPerformed

    private void btnOpretTurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpretTurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOpretTurActionPerformed

    /**
     * main operationen for vores gui
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ClientAdmin().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(ClientAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHentTure;
    private javax.swing.JButton btnOpdaterBrugere;
    private javax.swing.JButton btnOpretTur;
    private javax.swing.JButton btnSendTur;
    public javax.swing.JScrollPane scrInfo;
    private javax.swing.JScrollPane scrTure;
    public javax.swing.JTable tblInfo;
    private javax.swing.JTable tblTure;
    // End of variables declaration//GEN-END:variables
}
